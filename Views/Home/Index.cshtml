@model X.PagedList.IPagedList<Todolist.Models.Task>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Home Page";
}

<div class="home">
    <div class="buttons">
        <a class="addnewtask" asp-controller="Home" asp-action="Add">
            <i class="fa-solid fa-plus"></i> Add new task
        </a>
    </div>
    <hr style="color: #fff" />

    <div class="home_container">
        <div class="task_list">
            @foreach (var task in Model)
            {


                <div class="task_item">
                    <div class="task_item_title">@task.Id:  @task.Title</div>
                    <div class="task_item_desc">@task.Description</div>
                    <div class="task_item_complete">
                        <label class="switch">
                            <input type="checkbox" class="toggle-task" data-task-id="@task.Id" @(task.IsCompleted ? "checked" : "")>
                            <span class="slider round"></span>
                        </label>
                        <span class="task-status">@((task.IsCompleted ? "Completed" : "Not Completed"))</span>
                    </div>
                    <div class="task_item_actions">
                        <a class="edit" asp-controller="Home" asp-action="Edit" asp-route-id="@task.Id">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </a>
                        <a class="delete" asp-controller="Home" asp-action="Delete" asp-route-id="@task.Id">
                            <i class="fa-solid fa-trash"></i>
                        </a>
                    </div>
                </div>





            }
        </div>


        <div class="pager">


            @*<a href="?page=@(ViewBag.PageNumber - 1)" class="prev"><i class="fa-solid fa-chevron-left"></i></a>


                <a href="?page=@(ViewBag.PageNumber + 1)" class="next"><i class="fa-solid fa-chevron-right"></i></a>*@

            <!-- Pagination -->
            <div class="pagination-container text-center mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
                        </li>

                        @for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                            </li>
                        }

                        <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount })">Last</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>



    </div>
</div>



<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.toggle-task').forEach(function (toggle) {
            toggle.addEventListener('change', function () {
                var taskId = toggle.dataset.taskId;
                var isCompleted = toggle.checked;

                fetch(`/Home/MarkCompleted?id=${taskId}&isCompleted=${isCompleted}`, {
                    method: 'POST'
                }).then(response => {
                    if (!response.ok) {
                        console.error('Failed to mark task as completed.');
                    } else {
                        var parentElement = toggle.closest('.task_item');
                        console.log('Parent Element:', parentElement);
                        var statusText = parentElement.querySelector('.task-status');
                        if (statusText) {
                            statusText.textContent = isCompleted ? 'Completed' : 'Not Completed';
                        } else {
                            console.error('Could not find .task-status element.');
                        }
                    }
                }).catch(error => {
                    console.error('Error occurred while marking task as completed:', error);
                });
            });
        });
    });



</script>

