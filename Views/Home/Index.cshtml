@model IEnumerable<Todolist.Models.Task>

@{
    ViewData["Title"] = "Home Page";
}

<div class="home">
    <div class="buttons">
        <a class="addnewtask" asp-controller="Home" asp-action="Add">
            <i class="fa-solid fa-plus"></i> Add new task
        </a>
    </div>
    <hr />

    <div class="home_container">
        <div class="task_list">
            @foreach (var task in Model)
            {


                <div class="task_item">
                    <div class="task_item_title">@task.Id:  @task.Title</div>
                    <div class="task_item_desc">@task.Description</div>
                    <div class="task_item_complete">
                        <label class="switch">
                            <input type="checkbox" class="toggle-task" data-task-id="@task.Id" @(task.IsCompleted ? "checked" : "")>
                            <span class="slider round"></span>
                        </label>
                        <span class="task-status">@((task.IsCompleted ? "Completed" : "Not Completed"))</span>
                    </div>
                    <div class="task_item_actions">
                        <a class="edit" asp-controller="Home" asp-action="Edit" asp-route-id="@task.Id">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </a>
                        <a class="delete" asp-controller="Home" asp-action="Delete" asp-route-id="@task.Id">
                            <i class="fa-solid fa-trash"></i>
                        </a>
                    </div>
                </div>





            }
        </div>
        <div class="pager">
            <button class="prev"><i class="fa-solid fa-chevron-left"></i></button>
            <button class="next"><i class="fa-solid fa-chevron-right"></i></button>
        </div>


    </div>
</div>



<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.toggle-task').forEach(function (toggle) {
            toggle.addEventListener('change', function () {
                var taskId = toggle.dataset.taskId;
                var isCompleted = toggle.checked;

                fetch(`/Home/MarkCompleted?id=${taskId}&isCompleted=${isCompleted}`, {
                    method: 'POST'
                }).then(response => {
                    if (!response.ok) {
                        console.error('Failed to mark task as completed.');
                    } else {
                        var parentElement = toggle.closest('.task_item');
                        console.log('Parent Element:', parentElement);
                        var statusText = parentElement.querySelector('.task-status');
                        if (statusText) {
                            statusText.textContent = isCompleted ? 'Completed' : 'Not Completed';
                        } else {
                            console.error('Could not find .task-status element.');
                        }
                    }
                }).catch(error => {
                    console.error('Error occurred while marking task as completed:', error);
                });
            });
        });
    });



</script>

